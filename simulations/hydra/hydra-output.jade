//- ==== Standard header ====

| title
| #{title}
| 
| cc_navierstokes 
| 

//- ==== Load balancing section (3.2) ====

| 
|   load_balance
|     method       #{load_balance.method}
|     diagnostics  #{load_balance.diagnostics}
|   end
| 

//- ==== Load curves section (3.3) ====

//- | 
//- |   load_curve
//- |      id #{index+1}
//- |      #{t1} #{v1}
//- |      #{t3} #{v2}
//- |      ...
//- |   end
//- | 

//- ==== Materials section (3.4) ====
//- => Missing gamma

|   # Materials
each mat, index in materials
    | 
    |   material # #{mat.name}
    |       id     #{index + 1}
    |       rho    #{mat.rho}
    |       Cp     #{mat.cp}
    |       Cv     #{mat.cv}
    |       k11    #{mat.k[0]}
    |       k12    #{mat.k[1]}
    |       k13    #{mat.k[2]}
    |       k22    #{mat.k[3]}
    |       k23    #{mat.k[4]}
    |       k33    #{mat.k[5]}
    |       mu     #{mat.mu}
    |       beta   #{mat.beta}
    |       Tref   #{mat.tref}
    |       rigid  #{mat.rigid}
    |       velx   #{mat.vel[0]}
    |       vely   #{mat.vel[1]}
    |       velz   #{mat.vel[2]}
    |   end
    |   
    |   materialset # #{mat.name}
    |       id        #{index + 1}
    |       material  #{index + 1}
    |       type      #{mat.type}
    | 

    each bIdx in mat.blockids
        |      block     #{bIdx}
        | 

    |   end
    |  

//- ==== Execution control section (3.5) ====

| 
|   exe_control #{exe_control.nstep}
| 

//- ==== Output section (3.6) ====

| 
|   dump     #{output.dump}
|   plti     #{output.plti}
|   prtlev   #{output.prtlev}
|   prti     #{output.prti}
|   thti     #{output.thti}
|   ttyi     #{output.ttyi}
|   pltype   #{output.pltype}
|   filetype #{output.filetype}
| 

//- ==== Output histvar section (3.6.3) ====

| 
|   histvar
| 

each elem in output.histvar.TimeHistoryElem
    each id in elem.ids
        each variable in elem.vars
            |      elem #{id} #{variable}
            | 

each node in output.histvar.TimeHistoryNode
    each id in node.ids
        each variable in node.vars
            |      node #{id} #{variable}
            | 

each side in output.histvar.TimeHistorySide
    each id in side.ids
        each variable in side.vars
            |      side #{id} #{variable}
            | 

|  end
| 

//- ==== Output plotvar section (3.6.4) ====

| 
|   plotvar
| 

if output.plotvar.elem
    each variable in output.plotvar.elem
        |      elem #{variable}
        | 

if output.plotvar.node
    each variable in output.plotvar.node
        |      node #{variable}
        | 
    
if output.plotvar.side
    each side in output.plotvar.side
        each id in side.ids
            each variable in side.vars
                |      side #{id} #{variable}
                | 

|   end
| 


//- ==== Time Step (3.7) ====

| 
|   nsteps #{time.nsteps}
|   term   #{time.term}
|   deltat #{time.deltat}
| 

//- ==== Turbulence Statistics section (3.8) ====

| 
|    plotstatvar
| 

if plotstatvar.elem
    each variable in plotstatvar.elem
        |      elem !{variable}
        | 

if plotstatvar.node
    each variable in plotstatvar.node
        |      node !{variable}
        | 

each side in plotstatvar.side
    each id in side.ids
        each variable in side.vars
            |      side #{id} !{variable}
            | 

| 
|    end
| 

|    statistics
|       starttime    #{plotstatvar.starttime}
|       endtime      #{plotstatvar.endtime}
|       plotwinsize  #{plotstatvar.plotwinsize}
|    end

//- ------------------------------------------------------------------ -// 
//- ==== Cell-centered incompressible Navier-Stokes section (4) ====
//- ------------------------------------------------------------------ -//

//- ==== Energy section (4.2) ====

| 
|   energy  #{energy.form}
| 

//- ==== Hydrostat section (4.3) ====

if hstat.length > 0
    | 
    |   hydrostat
    | 
    
    each nodeset in hstat
        each id in nodeset.ids
            |      nodeset #{id} #{nodeset.curveId} #{nodeset.amplitude}
            | 
    
    |   end
    | 

//- ==== Initial conditions section (4.4) ====

| 
|   initial
|      velx         #{initial.vel[0]}
|      vely         #{initial.vel[1]}
|      velz         #{initial.vel[2]}
|      tke          #{initial.tke}
|      eps          #{initial.eps}
|      omega        #{initial.omega}
|      turbnu       #{initial.turbnu}
|      temperature  #{initial.temperature}
|      enthalpy     #{initial.enthalpy}
|      init_energy  #{initial.init_energy}
|   end
| 

//- ==== Body Forces section (4.5.1) ====

each body_force in forces.body_force
    | 
    |   body_force # !{body_force.comment}
    | 

    if body_force.id
        |      set #{body_force.id}
        | 

    if body_force.curveId
        |      lcid #{body_force.curveId}
        | 

    | 
    |       fx #{body_force.force[0]}
    |       fy #{body_force.force[1]}
    |       fz #{body_force.force[2]}
    |   end
    | 

//- ==== Body Forces section (4.5.2) ====

each boussinesqforce in forces.boussinesqforce
    | 
    |   boussinesqforce # !{boussinesqforce.comment}
    | 

    if boussinesqforce.id
        |      set #{boussinesqforce.id}
        | 

    if boussinesqforce.curveId
        |      lcid #{boussinesqforce.curveId}
        | 

    | 
    |       gx #{boussinesqforce.gravity[0]}
    |       gy #{boussinesqforce.gravity[1]}
    |       gz #{boussinesqforce.gravity[2]}
    |   end
    | 

//- ==== Body Forces section (4.5.3) ====

each porous_drag in forces.porous_drag
    | 
    |   porous_drag # !{porous_drag.comment}
    | 

    if porous_drag.id
        |      set #{porous_drag.id}
        | 

    if porous_drag.curveId
        |      lcid #{porous_drag.curveId}
        | 

    | 
    |       amp #{porous_drag.amplitude}
    |   end
    | 

//- ==== Boundary Conditions section (4.6) ====

each condition_type in ['enthalpy', 'tke', 'eps', 'distance', 'pressure', 'temperature', 'turbnu', 'heatflux']
    if boundary_conditions[condition_type] && boundary_conditions[condition_type].length > 0
        | 
        |   #{condition_type}
        | 
        
        each bc_scalar in boundary_conditions[condition_type]
            | 
            |      # !{bc_scalar.comment}
            | 
            each id in bc_scalar.ids
                |      sideset #{id} #{bc_scalar.curveId} #{bc_scalar.amplitude}
                | 

        | 
        |   end
        | 

if boundary_conditions.velocity && boundary_conditions.velocity.length > 0
    | 
    |   velocity
    | 

    each bc_velocity in boundary_conditions.velocity
        | 
        |      # !{bc_velocity.comment}
        | 

        each id in bc_velocity.ids
            | 
            |      velx sideset #{id} #{bc_velocity.curveId} #{bc_velocity.amplitude[0]}
            |      vely sideset #{id} #{bc_velocity.curveId} #{bc_velocity.amplitude[1]}
            |      velz sideset #{id} #{bc_velocity.curveId} #{bc_velocity.amplitude[2]} 
            | 

    | 
    |   end
    | 


if boundary_conditions.symmetrybc && boundary_conditions.symmetrybc.length > 0
    | 
    |   symmetrybc
    | 

    each bc_sym in boundary_conditions.symmetrybc
        | 
        |      # !{bc_sym.comment}

        each id in bc_sym.ids
            |      velx sideset #{id} #{bc_sym.curveId} #{bc_sym.amplitude[0]}
            |      vely sideset #{id} #{bc_sym.curveId} #{bc_sym.amplitude[1]}
            |      velz sideset #{id} #{bc_sym.curveId} #{bc_sym.amplitude[2]} 
            | 

    | 
    |   end
    | 

each condition_type in ['pressureoutflow', 'passiveoutflow']
    if boundary_conditions[condition_type] && boundary_conditions[condition_type].length
        | 
        |   #{condition_type}
        | 

        each bc_flow in boundary_conditions[condition_type]
            | 
            |      # #{bc_flow.comment}
            |      sideset #{bc_flow.id}
            | 

        | 
        |   end
        | 

//- ==== User-defined Velocity boundary conditions section (4.7)
//- NOT SUPPORTED YET

//- ==== Heat sources section (4.8) ===

each heat_source in heat_sources
    | 
    |   # !{heat_source.comment}
    |   heat_source
    | 

    if heat_source.id
        |      set   #{heat_source.id}
        | 

    if heat_source.curveId
        |      lcid  #{heat_source.curveId}
        | 

    |      Q     #{heat_source.amplitude}
    |   end
    | 

//- ==== Pressure, Momentum and Transport Solvers section (4.9) ===
//- FIXME need some if base on some field

| 
|   ppesolver
|      type                 #{ppesolver.type}
|      amgpc                #{ppesolver.amgpc}
|      hypre_type           #{ppesolver.hypre_type}
|      hypre_coarsen_type   #{ppesolver.hypre_coarsen_type}
|      hypre_smoother       #{ppesolver.hypre_smoother}
|      hypre_smoother_dn    #{ppesolver.hypre_smoother_dn}
|      hypre_smoother_up    #{ppesolver.hypre_smoother_up}
|      hypre_smoother_co    #{ppesolver.hypre_smoother_co}
|      hypre_smoother       #{ppesolver.hypre_smoother}
|      interp_type          #{ppesolver.interp_type}
|      hypre_nodal          #{ppesolver.hypre_nodal}
|      trunc_factor         #{ppesolver.trunc_factor}
|      pmax_elements        #{ppesolver.pmax_elements}
|      agg_num_levels       #{ppesolver.agg_num_levels}
|      agg_num_paths        #{ppesolver.agg_num_paths}
|      strong_threshold     #{ppesolver.strong_threshold}
|      max_rowsum           #{ppesolver.max_rowsum}
|      smoother             #{ppesolver.smoother}
|      cycle                #{ppesolver.cycle}
|      solver               #{ppesolver.solver}
|      pre_smooth           #{ppesolver.pre_smooth}
|      post_smooth          #{ppesolver.post_smooth}
|      levels               #{ppesolver.levels}
|      itmax                #{ppesolver.itmax}
|      itchk                #{ppesolver.itchk}
|      eps                  #{ppesolver.eps}
|      zeropivot            #{ppesolver.zeropivot}
|   end
| 
|   momentumsolver
|     type          #{momentumsolver.type}
|     restart       #{momentumsolver.restart}
|     itmax         #{momentumsolver.itmax}
|     itchk         #{momentumsolver.itchk}
|     diagnostics   #{momentumsolver.diagnostics}
|     convergence   #{momentumsolver.convergence}
|     eps           #{momentumsolver.eps}
|   end
| 
|   transportsolver
|     type          #{transportsolver.type}
|     restart       #{transportsolver.restart}
|     itmax         #{transportsolver.itmax}
|     itchk         #{transportsolver.itchk}
|     diagnostics   #{transportsolver.diagnostics}
|     convergence   #{transportsolver.convergence}
|     eps           #{transportsolver.eps}
|   end
| 

//- ==== solution_method section (4.10) ====

| 
|   solution_method
|     strategy           #{solution.strategy}
|     itmax              #{solution.itmax}
|     nvec               #{solution.nvec}
|     eps                #{solution.eps}
|     eps_dist           #{solution.eps_dist}
|     eps_p0             #{solution.eps_p0}
|     drop_tol           #{solution.drop_tol}
|     error_norm         #{solution.error_norm}
|     timestep_control   #{solution.timestep_control}
|     convergence        #{solution.convergence}
|     subcycle           #{solution.subcycle}
|     diagnostics        #{solution.diagnostics}
|   end
| 

//- ==== time_integration section (4.11) ====

| 
|   time_integration
|     type      #{time.type}
|     CFLinit   #{time.CFLinit}
|     CFLmax    #{time.CFLmax}
|     dtmax     #{time.dtmax}
|     dtscale   #{time.dtscale}
|     thetaa    #{time.thetaa}
|     thetak    #{time.thetak}
|     thetaf    #{time.thetaf}
|   end
| 

//- ==== Turbulence models section (4.12) ====

| 
|   tmodel #{turbulence.model}
| 

if turbulence.model === 'rng_ke'
    | 
    |   turbulence rng_ke
    |      timescale_limiter   #{turbulence.timescale_limiter}
    |   end
    | 

if turbulence.model === 'smagorinsky'
    | 
    |   turbulence smagorinsky
    |      c_s      #{turbulence.c_s}
    |      prandtl  #{turbulence.prandtl_s}
    |      schmidt  #{turbulence.schmidt_s}
    |   end
    | 

if turbulence.model === 'wale'
    | 
    |   turbulence wale
    |      c_w      #{turbulence.c_w}
    |      prandtl  #{turbulence.prandtl_w}
    |      schmidt  #{turbulence.schmidt_w}
    |   end
    | 

//- ==== END ====

| 
| end
| 
| exit
